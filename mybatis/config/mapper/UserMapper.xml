<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wz.mybatis.mapper.UserMapper">
	<!-- 1.根据用户Id查询用户信息 -->
	<!-- 
		select        : 表示一个MapperStatement对象
		id            : statement的唯一标示
		#{}           : 表示一个占位符
		#{id}         : 里面的id表示输入参数的参数名称
		parameterType : 输入参数的java类型
		resultType    : 输出结果的所映射的java类型
	 -->
	<select id="findUserById" parameterType="int" resultType="com.wz.mybatis.po.User">
		SELECT * FROM USER WHERE id =#{id}
	</select>
	
	<!-- 2.根据用户名称模糊查询用户列表 -->
	<!-- 
		${}      : 表示一个sql的连接符
		${value} : 里面的value便是输入参数的参数名称，如果该参数是简单类型，那么${}里面的参数名称必须是value
	 -->
	<select id="findUsersByName" parameterType="java.lang.String" resultType="com.wz.mybatis.po.User">
		SELECT * FROM USER WHERE username LIKE '%${value}%'
	</select>
	
	
	<!-- 3.添加用户 -->
	<!-- 
		keyProperty      : 查询主键，在标签内需要输入查询主键的sql
		order            : 指定查询主键的sql和insert语句的执行顺序，相当于insert语句来说
		LAST_INSERT_ID() : 该函数是mysql的函数，获取自增主键的id，必须配合insert语句一起使用 
	 -->
	<insert id="insertUser" parameterType="com.wz.mybatis.po.User">
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO USER
		(username,birthday,sex,address)
		VALUES(#{username},#{birthday},#{sex},#{address})
	</insert>
	
	<!-- 定义sql片段 -->
	<!-- sql片段内，可以定义sql语句中任何部分
	     sql片段内，最好不用将where和select关键字声明在内
	 -->
	<sql id="whereClause">
		<!-- 
			if标签  : 可以对输入的参数进行判断
			test  : 指定判断表达式
		 -->
		<if test="user != null">
			<if test="user.username != null and user.username != ''">
				AND username LIKE '%${user.username}%'
			</if>
			<if test="user.sex != null and user.sex != ''">
				AND sex = #{user.sex}
			</if>
		</if>
		
		<if test="idList != null">
			AND id IN
			<!-- 
				collection : 表示pojo中集合属性的属性名称
				item	   : 为遍历出的结果声明一个变量名称
				open	   : 遍历开始时，需要拼接的字符串 
				close	   : 遍历结束时，需要拼接的字符串 
				separator  : 遍历中间需要拼接的连接符 
			 -->
			<foreach collection="idList" item="id" open="(" close=")" separator=",">
				#{id}
			</foreach>
		</if>
	</sql>
	
	<!-- 综合查询用户列表 -->
	<select id="findUserList" parameterType="com.wz.mybatis.po.UserQueryVo" resultType="com.wz.mybatis.po.User">
		SELECT * FROM user
		<!-- where标签：默认去掉后面第一个AND，如果没有参数，则把自己干掉 -->
		<where>
			<!-- 引入sql片段 -->
			<include refid="whereClause" />
		</where>
	</select>
	
	<!-- 综合查询用户总数 -->
	<select id="findUserCount" parameterType="com.wz.mybatis.po.UserQueryVo" resultType="int">
		SELECT count(*) FROM user
		<!-- where标签：默认去掉后面第一个AND，如果没有参数，则把自己干掉 -->
		<where>
			<!-- 引入sql片段 -->
			<include refid="whereClause" />
		</where>
	</select>
</mapper>


























